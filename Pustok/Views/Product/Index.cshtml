@model ProductListVM
@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />

}
@await Html.PartialAsync("_MobileMenuPartialView")
<section class="breadcrumb-section">
    <h2 class="sr-only">Site Breadcrumb</h2>
    <div class="container">
        <div class="breadcrumb-contents">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Home</a></li>
                    <li class="breadcrumb-item active">Shop</li>
                </ol>
            </nav>
        </div>
    </div>
</section>
<main class="inner-page-sec-padding-bottom">
    <div class="container">
        <div class="row">






            <div class="col-lg-9 order-lg-2" >


                <div class="shop-toolbar with-sidebar mb--30">
                    <div class="row align-items-center">
                        <div class="col-lg-2 col-md-2 col-sm-6">
                            <!-- Product View Mode -->
                            <div class="product-view-mode">
                                <a href="~/cilent/#" class="sorting-btn active" data-target="grid">
                                    <i class="fas fa-th"></i>
                                </a>
                                <a href="~/cilent/#" class="sorting-btn" data-target="grid-four">
                                    <span class="grid-four-icon">
                                        <i class="fas fa-grip-vertical"></i><i class="fas fa-grip-vertical"></i>
                                    </span>
                                </a>
                                <a href="~/cilent/#" class="sorting-btn" data-target="list ">
                                    <i class="fas fa-list"></i>
                                </a>
                            </div>
                        </div>
                        <div class="col-xl-4 col-md-4 col-sm-6  mt--10 mt-sm--0">
                            <span class="toolbar-status">
                                @* Showing 1 to 9 of 14 (2 Pages) *@
                                Showing 1 to 9 of @Model.ProductCount (2 Pages)
                            </span>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-6  mt--10 mt-md--0">
                            <div class="sorting-selection">
                                <span>Show:</span>
                                <select class="form-control nice-select sort-select">
                                    <option value="" selected="selected">3</option>
                                    <option value="">9</option>
                                    <option value="">5</option>
                                    <option value="">10</option>
                                    <option value="">12</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 mt--10 mt-md--0 ">
                            <div class="sorting-selection">
                                <span>Sort By:</span>
                                <select class="form-control nice-select sort-select mr-0">
                                    <option value="" selected="selected">Default Sorting</option>
                                    <option value="">
                                        Sort
                                        By:Name (A - Z)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Name (Z - A)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Price (Low &gt; High)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Price (High &gt; Low)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Rating (Highest)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Rating (Lowest)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Model (A - Z)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Model (Z - A)
                                    </option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="shop-toolbar d-none">
                    <div class="row align-items-center">
                        <div class="col-lg-2 col-md-2 col-sm-6">
                            <!-- Product View Mode -->
                            <div class="product-view-mode">
                                <a href="~/cilent/#" class="sorting-btn active" data-target="grid">
                                    <i class="fas fa-th"></i>
                                </a>
                                <a href="~/cilent/#" class="sorting-btn" data-target="grid-four">
                                    <span class="grid-four-icon">
                                        <i class="fas fa-grip-vertical"></i><i class="fas fa-grip-vertical"></i>
                                    </span>
                                </a>
                                <a href="~/cilent/#" class="sorting-btn" data-target="list ">
                                    <i class="fas fa-list"></i>
                                </a>
                            </div>
                        </div>
                        <div class="col-xl-5 col-md-4 col-sm-6  mt--10 mt-sm--0">
                            <span class="toolbar-status">
                                Showing 1 to 9 of 14 (2 Pages)
                            </span>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-6  mt--10 mt-md--0">
                            <div class="sorting-selection">
                                <span>Show:</span>
                                <select class="form-control nice-select sort-select">
                                    <option value="" selected="selected">3</option>
                                    <option value="">9</option>
                                    <option value="">5</option>
                                    <option value="">10</option>
                                    <option value="">12</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-xl-3 col-lg-4 col-md-4 col-sm-6 mt--10 mt-md--0 ">
                            <div class="sorting-selection">
                                <span>Sort By:</span>
                                <select class="form-control nice-select sort-select mr-0">
                                    <option value="" selected="selected">Default Sorting</option>
                                    <option value="">
                                        Sort
                                        By:Name (A - Z)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Name (Z - A)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Price (Low &gt; High)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Price (High &gt; Low)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Rating (Highest)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Rating (Lowest)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Model (A - Z)
                                    </option>
                                    <option value="">
                                        Sort
                                        By:Model (Z - A)
                                    </option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                @*    Product List  &  Pagination*@
                @await Component.InvokeAsync("ProductListViewComponenet")


                @*    Modal  *@
                @await Html.PartialAsync("_ProductModalPartialView", Model)


            </div>




            <div class="col-lg-3  mt--40 mt-lg--0">
                <form asp-action="Filter" method="post" class="inner-page-sidebar">


                    <!-- Accordion -->
                    @await Html.PartialAsync("_ShopCategoriesPartial", Model)


                    <!-- Tag -->
                    @await Html.PartialAsync("_ShopTagsPartial", Model)


                    <!-- Price -->
                    <div class="single-block filter-price mt-5 d-flex flex-column align-items-center">
                        <h3 class="sidebar-title w-100">Filter by Price</h3>
                        <div class="range-slider pt-30 d-flex gap-5 ">
                            <input type="number" id="minPrice" name="minPrice" placeholder="Min Price" class="form-control my-3 mr-2 " />
                            <input type="number" id="maxPrice" name="maxPrice" placeholder="Max Price" class="form-control my-3 ml-2 " />
                        </div>
                        <a class="btn btn--primary w-10 " id="submit"> Filter</a>
                    </div>




                    <!-- Promotion Block -->
                    <div class="single-block">
                        <a href="~/cilent/#" class="promo-image sidebar">
                            <img src="~/cilent/image/others/home-side-promo.jpg" alt="">
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</main>


@section BrandSlider {
    @await Html.PartialAsync("_BrandSliderPartialView")
}

@section Script {



    <script>



        var cat = document.querySelectorAll(".category-item");

        cat.forEach(category => {
            var id = category.dataset.id;
            category.addEventListener("click", (e) => {
                e.preventDefault();
                console.log("click on category:", id);

                var formData = new FormData();
                formData.append('categoryId', id);

                fetch('/Product/ProductCategoryFilter', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(x => {
                        document.querySelector(".product").innerHTML = x;
                    })
                    .catch(error => {
                        console.error("Error fetching products:", error);
                    });
            });
        });

        var tag = document.querySelectorAll(".tag-item");

        tag.forEach(category => {
            var id = category.dataset.id;
            category.addEventListener("click", (e) => {
                e.preventDefault();
                console.log("click on tag:", id);

                var formData = new FormData();
                formData.append('tagId', id);

                fetch('/Product/ProductCategoryFilter', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(x => {
                        document.querySelector(".product").innerHTML = x;
                    })
                    .catch(error => {
                        console.error("Error fetching products:", error);
                    });
            });
        });

        var submit = document.getElementById('submit');

        submit.addEventListener('click', (e) => {
            e.preventDefault();
            var minPrice = document.getElementById('minPrice').value;
            var maxPrice = document.getElementById('maxPrice').value;

            var formData = new FormData();
            formData.append('minPrice', minPrice);
            formData.append('maxPrice', maxPrice);

            fetch('/Product/ProductCategoryFilter', {
                method: 'POST',
                body: formData
            })
                .then(response => response.text())
                .then(x => {
                    document.querySelector(".product").innerHTML = x;
                })
                .catch(error => {
                    console.error("Error fetching products:", error);
                });
        });

    </script>












    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js">
    </script>
    <script>
        // let productView = document.getElementById('product-View')

        // productView.addEventListener('click', e => {
        //     e.preventDefault();
        //     console.log('productView')


        //     if (e.srcElement.classList.contains('.prod .basket')){
        //         console.log('basket')
        //     }
        // })








        let productView = document.getElementById('product-View');

        productView.addEventListener('click', e => {
            e.preventDefault();
            console.log('productView');

            // Check if the clicked element has both "prod" and "basket" classes
            if (e.target.classList.contains('prod') && e.target.classList.contains('basket')) {
                console.log('basket');
            }
        });





        var prods = document.querySelectorAll(".prod .basket");

        prods.forEach(prod => {
            prod.addEventListener('click', e => {
                e.preventDefault();
                console.log('click')
                var id = prod.dataset.id;
                fetch('Product/AddBasket/' + id)
                    .then(res => {
                        if (res.ok) {
                            let count = document.querySelector('.text-number').innerText;
                            document.querySelector('.text-number').innerText = ++count
                            Command: toastr["success"]("Product added to cart")

                            toastr.options = {
                                "closeButton": true,
                                "debug": false,
                                "newestOnTop": false,
                                "progressBar": false,
                                "positionClass": "toast-top-right",
                                "preventDuplicates": false,
                                "onclick": null,
                                "showDuration": "300",
                                "hideDuration": "1000",
                                "timeOut": "5000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut"
                            }
                        } else {
                            Command: toastr["warning"]("An error occurred while adding the product to the cart...")

                            toastr.options = {
                                "closeButton": false,
                                "debug": false,
                                "newestOnTop": false,
                                "progressBar": false,
                                "positionClass": "toast-top-right",
                                "preventDuplicates": false,
                                "onclick": null,
                                "showDuration": "300",
                                "hideDuration": "1000",
                                "timeOut": "5000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut"
                            }
                        }
                    })
                    .catch(err => console.log(err))
            })
        })



















        // var prods = document.querySelectorAll(".prod .basket");

        // prods.forEach(prod => {
        //     prod.addEventListener('click', e => {
        //         e.preventDefault();
        //         console.log('click')
        //         var id = prod.dataset.id;
        //         fetch('Product/AddBasket/' + id)
        //             .then(res => {
        //                 if (res.ok) {
        //                     let count = document.querySelector('.text-number').innerText;
        //                     document.querySelector('.text-number').innerText = ++count
        //                     Command: toastr["success"]("Product added to cart")

        //                     toastr.options = {
        //                         "closeButton": true,
        //                         "debug": false,
        //                         "newestOnTop": false,
        //                         "progressBar": false,
        //                         "positionClass": "toast-top-right",
        //                         "preventDuplicates": false,
        //                         "onclick": null,
        //                         "showDuration": "300",
        //                         "hideDuration": "1000",
        //                         "timeOut": "5000",
        //                         "extendedTimeOut": "1000",
        //                         "showEasing": "swing",
        //                         "hideEasing": "linear",
        //                         "showMethod": "fadeIn",
        //                         "hideMethod": "fadeOut"
        //                     }
        //                 } else {
        //                     Command: toastr["warning"]("An error occurred while adding the product to the cart...")

        //                     toastr.options = {
        //                         "closeButton": false,
        //                         "debug": false,
        //                         "newestOnTop": false,
        //                         "progressBar": false,
        //                         "positionClass": "toast-top-right",
        //                         "preventDuplicates": false,
        //                         "onclick": null,
        //                         "showDuration": "300",
        //                         "hideDuration": "1000",
        //                         "timeOut": "5000",
        //                         "extendedTimeOut": "1000",
        //                         "showEasing": "swing",
        //                         "hideEasing": "linear",
        //                         "showMethod": "fadeIn",
        //                         "hideMethod": "fadeOut"
        //                     }
        //                 }
        //             })
        //             .catch(err => console.log(err))
        //     })
        // })

    </script>



}