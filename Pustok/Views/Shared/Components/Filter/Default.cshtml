@model ProductListVM


<div class="single-block">
    <h3 class="sidebar-title">Categories</h3>
    <ul style="max-height: 400px; overflow-y: auto;" class="sidebar-menu--shop menu-type-2">
        <li><a class="category-item" style="cursor:pointer;" data-id="">All Category <span>(@Model.CategoryCount)</span></a></li>

        @if (Model.Categories != null)
        {
            @foreach (var cat in Model.Categories)
            {
                <li><a class="category-item" style="cursor:pointer;" data-id="@cat.Id">@cat.Name<span>(@(cat.ProductCategory.Count()))</span></a></li>
            }
        }
    </ul>
</div>
<input id="SelectedCategory" value="@Model.SelectedCategory" hidden/>


<div class="single-block">
    <h3 class="sidebar-title">Tags</h3>
    <ul style="max-height: 250px; overflow-y: auto;" class="sidebar-menu--shop menu-type-2">
        <li><a data-id="" style="cursor:pointer;" class="tag-item">All Tag<span>(@Model.TagCount)</span></a></li>
        @if (Model.Tags != null)
        {
            foreach (var tag in Model.Tags)
            {
                <li><a data-id="@tag.Id" style="cursor:pointer;" class="tag-item">@tag.Name<span>(@(tag.ProductTag.Count()))</span></a></li>
            }
        }
    </ul>
</div>
<input id="SelectedTag" value="@Model.SelectedTag" hidden/>


<div class="single-block filter-price mt-5 d-flex flex-column align-items-center">
    <h3 class="sidebar-title w-100">Filter by Price</h3>
    <div class="range-slider pt-30 d-flex gap-5 ">
        <div class="my-3 mr-2 text-center">
            <label class="mr-2 " for="minPrice">Min Price</label>
            <input value="@(Model.minPrice!=null?Model.minPrice:"")" type="number" id="minPrice" name="minPrice" placeholder="Min Price" class="form-control mt-1 mb-3 mr-2" />
        </div>
        <div class="my-3 ml-2 text-center">
            <label class="ml-2" for="maxPrice">Max Price</label>
            <input value="@(Model.maxPrice!=null?Model.maxPrice:"")" type="number" id="maxPrice" name="maxPrice" placeholder="Max Price" class="form-control mt-1 mb-3 ml-2" />
        </div>
    </div>
    <a class="btn btn--primary w-10 btn-submit" id=""> Filter</a>
    <a class="btn btn--primary w-5 btn-clear mt-4" id=""> Clear Filter</a>
</div>






@* <script>

    document.addEventListener("DOMContentLoaded", function () {

        var filterContainer = document.querySelector(".Filers");
        var productList = document.querySelector(".product-list");

        filterContainer.addEventListener("click", function (e) {
            if (e.target.classList.contains("category-item")) {
                var id = e.target.dataset.id;
                console.log("click on category:", id);

                var formData = new FormData();
                formData.append('categoryId', id);

                fetch('/Product/Filter', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(x => {
                        filterContainer.innerHTML = x;
                    })
                    .catch(error => {
                        console.error("Error fetching products:", error);
                    });





                fetch('/Product/ProductCategoryFilter', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(x => {
                        productList.innerHTML = x;
                    })
                    .catch(error => {
                        console.error("Error fetching products:", error);
                    });
            } 
            










            else if (e.target.classList.contains("tag-item")) {
                var id = e.target.dataset.id;
                var categoryId = document.getElementById('SelectedCategory').value
                console.log("click on tag:", id);

                var formData = new FormData();
                formData.append('tagId', id);
                formData.append('categoryId', categoryId);

                fetch('/Product/Filter', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(x => {
                        filterContainer.innerHTML = x;
                    })
                    .catch(error => {
                        console.error("Error fetching products:", error);
                    });



                fetch('/Product/ProductCategoryFilter', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(x => {
                        productList.innerHTML = x;
                    })
                    .catch(error => {
                        console.error("Error fetching products:", error);
                    });


            } 
            
            else if (e.target.classList.contains("btn-submit")) {
                var submitButton = document.querySelector('.btn-submit');
                console.log('btn-submit')
                submitButton.addEventListener('click', (e) => {
                    e.preventDefault();
                    console.log('click')

                    var minPrice = document.getElementById('minPrice').value;
                    var maxPrice = document.getElementById('maxPrice').value;

                    console.log(minPrice);

                    var tagId = document.getElementById('SelectedTag').value
                    var categoryId = document.getElementById('SelectedCategory').value
                    console.log("click on tag:", tagId);


                    var formData = new FormData();
                    formData.append('minPrice', minPrice);
                    formData.append('maxPrice', maxPrice);
                    formData.append('tagId', tagId);
                    formData.append('categoryId', categoryId);

                    fetch('/Product/Filter', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.text())
                        .then(x => {
                            filterContainer.innerHTML = x;
                        })
                        .catch(error => {
                            console.error("Error fetching products:", error);
                        });


                    fetch('/Product/ProductCategoryFilter', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.text())
                        .then(x => {
                            productList.innerHTML = x;
                        })
                        .catch(error => {
                            console.error("Error fetching products:", error);
                        });

                });

            }
            
            else if (e.target.classList.contains("btn-clear")) {
                var submitButton = document.querySelector('.btn-clear');
                console.log('btn-clear')
                submitButton.addEventListener('click', (e) => {
                    e.preventDefault();
                    console.log('click')


                    var formData = new FormData();
                    formData.append('minPrice', null);
                    formData.append('maxPrice', null);
                    formData.append('tagId', null);
                    formData.append('categoryId', null);

                    fetch('/Product/Filter', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.text())
                        .then(x => {
                            filterContainer.innerHTML = x;
                        })
                        .catch(error => {
                            console.error("Error fetching products:", error);
                        });


                    fetch('/Product/ProductCategoryFilter', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.text())
                        .then(x => {
                            productList.innerHTML = x;
                        })
                        .catch(error => {
                            console.error("Error fetching products:", error);
                        });
                });

            }
        });
    });
</script> *@










































<script>
    document.addEventListener("DOMContentLoaded", function () {
        var filterContainer = document.querySelector(".Filers");
        var productList = document.querySelector(".product-list");

        filterContainer.addEventListener("click", function (e) {
            if (e.target.classList.contains("category-item")) {
                var id = e.target.dataset.id;
                console.log("click on category:", id);

                var formData = new FormData();
                formData.append('categoryId', id);

                fetch('/Product/Filter', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(x => {
                        filterContainer.innerHTML = x;
                    })
                    .catch(error => {
                        console.error("Error fetching products:", error);
                    });

                fetch('/Product/ProductCategoryFilter', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(x => {
                        productList.innerHTML = x;
                    })
                    .catch(error => {
                        console.error("Error fetching products:", error);
                    });
            } else if (e.target.classList.contains("tag-item")) {
                var id = e.target.dataset.id;
                var categoryId = document.getElementById('SelectedCategory').value
                console.log("click on tag:", id);

                var formData = new FormData();
                formData.append('tagId', id);
                formData.append('categoryId', categoryId);

                fetch('/Product/Filter', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(x => {
                        filterContainer.innerHTML = x;
                    })
                    .catch(error => {
                        console.error("Error fetching products:", error);
                    });

                fetch('/Product/ProductCategoryFilter', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(x => {
                        productList.innerHTML = x;
                    })
                    .catch(error => {
                        console.error("Error fetching products:", error);
                    });
            } else if (e.target.classList.contains("btn-submit")) {
                var submitButton = document.querySelector('.btn-submit');
                console.log('btn-submit')
                submitButton.addEventListener('click', (e) => {
                    e.preventDefault();
                    console.log('click')

                    var minPrice = document.getElementById('minPrice').value;
                    var maxPrice = document.getElementById('maxPrice').value;

                    console.log(minPrice);

                    var tagId = document.getElementById('SelectedTag').value
                    var categoryId = document.getElementById('SelectedCategory').value
                    console.log("click on tag:", tagId);

                    var formData = new FormData();
                    formData.append('minPrice', minPrice);
                    formData.append('maxPrice', maxPrice);
                    formData.append('tagId', tagId);
                    formData.append('categoryId', categoryId);

                    fetch('/Product/Filter', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.text())
                        .then(x => {
                            filterContainer.innerHTML = x;
                        })
                        .catch(error => {
                            console.error("Error fetching products:", error);
                        });

                    fetch('/Product/ProductCategoryFilter', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.text())
                        .then(x => {
                            productList.innerHTML = x;
                        })
                        .catch(error => {
                            console.error("Error fetching products:", error);
                        });
                });
            } else if (e.target.classList.contains("btn-clear")) {
                var submitButton = document.querySelector('.btn-clear');
                console.log('btn-clear')
                submitButton.addEventListener('click', (e) => {
                    e.preventDefault();
                    console.log('click')

                    var formData = new FormData();
                    formData.append('minPrice', null);
                    formData.append('maxPrice', null);
                    formData.append('tagId', null);
                    formData.append('categoryId', null);

                    fetch('/Product/Filter', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.text())
                        .then(x => {
                            filterContainer.innerHTML = x;
                        })
                        .catch(error => {
                            console.error("Error fetching products:", error);
                        });

                    fetch('/Product/ProductCategoryFilter', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.text())
                        .then(x => {
                            productList.innerHTML = x;
                        })
                        .catch(error => {
                            console.error("Error fetching products:", error);
                        });
                });
            }
        });
    });
</script>



