@{
    string basketCount = TempData["BasketItemCount"] != null ? TempData["BasketItemCount"].ToString() : "0";
    int con = int.Parse(basketCount);
}

<!DOCTYPE html>
<html lang="zxx">


<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Pustok - Book Store HTML Template</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Use Minified Plugins Version For Fast Page Load -->
    <link rel="stylesheet" type="text/css" media="screen" href="~/cilent/css/plugins.css" />
    <link rel="stylesheet" type="text/css" media="screen" href="~/cilent/css/main.css" />
    <link rel="shortcut icon" type="image/x-icon" href="~/cilent/image/favicon.ico">
    @await RenderSectionAsync("Styles", false)
</head>

<body>
    <div class="site-wrapper" id="top">
        <div class="site-header d-none d-lg-block">
            <div class="header-middle pt--10 pb--10">
                <div class="container">
                    <div class="row align-items-center">
                        <div class="col-lg-3 ">
                            @* asp-controller="home" asp-action="index" *@
                            <a class="site-brand">
                                <img src="~/cilent/image/logo.png" alt="">
                            </a>
                        </div>
                        <div class="col-lg-3">
                            <div class="header-phone ">
                                <div class="icon">
                                    <i class="fas fa-headphones-alt"></i>
                                </div>
                                <div class="text">
                                    <p>Free Support 24/7</p>
                                    <p class="font-weight-bold number">+01-202-555-0181</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="main-navigation flex-lg-right">
                                <ul class="main-menu menu-right ">
                                    <li class="menu-item has-children">
                                        <a asp-controller="Home" asp-action="Index">
                                            Home </i>
                                        </a>
                                    </li>
                                    <!-- Shop -->
                                    <li class="menu-item has-children mega-menu">
                                        <a asp-controller="Product" asp-action="Index">
                                            shop
                                        </a>

                                    </li>
                                    <!-- Pages -->

                                    <li class="menu-item">
                                        <a asp-controller="Contac" asp-action="Index">Contact</a>
                                    </li>

                                    <li class="menu-item has-children">
                                        <a>
                                            Account <i class="fas fa-chevron-down dropdown-arrow"></i>
                                        </a>
                                        <ul class="sub-menu">


                                            @if (User.Identity != null)
                                            {
                                                @if (User.Identity.Name != null)
                                                {
                                                    <li>
                                                        <a asp-action="login" asp-controller="Account" class="font-weight-bold">@User.Identity.Name</a>
                                                    </li>
                                                    @if (User.IsInRole("Admin"))
                                                    {
                                                        <li>
                                                            <a asp-action="Index" asp-controller="Dashboard" asp-area="Admin" class=" text-white p-2 btn btn-primary">Go to Admin Page</a>
                                                        </li>
                                                    }
                                                    <li>
                                                        <a asp-action="Logout" asp-controller="Account">Log out</a>
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li><a asp-controller="Account" asp-action="Login">Login</a></li>
                                                    <li><a asp-controller="Account" asp-action="Register">Register</a></li>
                                                }}

                                            <li><a asp-controller="Cart" asp-action="Index">Cart</a></li>
                                            <li><a asp-controller="WishList" asp-action="Index">Wishlist</a></li>

                                            <li><a asp-controller="Faq" asp-action="Index">Faq</a></li>
                                        </ul>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="header-bottom pb--10">
                <div class="container">
                    <div class="row align-items-center">
                        <div class="col-lg-3">
                            <nav class="category-nav">

       @await Component.InvokeAsync("HeadCategories")
                            </nav>
                        </div>


                        <div class="col-lg-5">
                            <div class="header-search-block">
                                <input type="text" placeholder="Search entire store here" id="search-product">


                                <ul style="background-color:#ededed; overflow:hidden; position: absolute; z-index:10; width:100%;border:1px solid #CBCBCB; border-radius:8px; margin:10px; padding:0 10px; display:none" id="SearchList">

                                    @await Component.InvokeAsync("Search")
                                   
                                </ul>

                                <button>Search</button>
                            </div>
                        </div>

                        <div class="col-lg-4">
                            <div class="main-navigation flex-lg-right">
                                <div class="cart-widget">



                                    <div class="cart-block">
                                        <div class="cart-total bask">
                                            @if (con > 0)
                                            {
                                                <span class="text-number">

                                                    @con
                                                </span>

                                            }
                                            else
                                            {
                                                <span class="text-number">0</span>
                                            }
                                            <span class="text-item">
                                                Shopping Cart
                                            </span>
                                            <span class="price">
                                                £0.00
                                                <i class="fas fa-chevron-down"></i>
                                            </span>
                                        </div>
                                        <div class="cart-dropdown-block">
                                            <div id="miniCart">
                                                @await Component.InvokeAsync("Basket")
                                            </div>
                                            <div class="single-cart-block ">
                                                <div class="btn-block">
                                                    <a asp-action="Index" asp-controller="Cart" class="btn">
                                                        View Cart <i class="fas fa-chevron-right"></i>
                                                    </a>
                                                    <a href="~/cilent/checkout.html" class="btn btn--primary">
                                                        Check Out <i class="fas fa-chevron-right"></i>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @RenderBody()

    </div>
    <!--=================================
    Brands Slider
    ===================================== -->
    @await RenderSectionAsync("BrandSlider", false)
    <!--=================================
    Footer Area
    ===================================== -->
    <footer class="site-footer">
        <div class="container">
            <div class="row justify-content-between  section-padding">
                <div class=" col-xl-3 col-lg-4 col-sm-6">
                    <div class="single-footer pb--40">
                        <div class="brand-footer footer-title">
                            <img src="~/cilent/image/logo--footer.png" alt="">
                        </div>
                        <div class="footer-contact">
                            <p>
                                <span class="label">Address:</span><span class="text">
                                    Example Street 98, HH2 BacHa, New
                                    York,
                                    USA
                                </span>
                            </p>
                            <p><span class="label">Phone:</span><span class="text">+18088 234 5678</span></p>
                            <p><span class="label">Email:</span><span class="text">suport@hastech.com</span></p>
                        </div>
                    </div>
                </div>
                <div class=" col-xl-3 col-lg-2 col-sm-6">
                    <div class="single-footer pb--40">
                        <div class="footer-title">
                            <h3>Information</h3>
                        </div>
                        <ul class="footer-list normal-list">
                            <li><a href="~/cilent/#">Prices drop</a></li>
                            <li><a href="~/cilent/#">New products</a></li>
                            <li><a href="~/cilent/#">Best sales</a></li>
                            <li><a href="~/cilent/#">Contact us</a></li>
                            <li><a href="~/cilent/#">Sitemap</a></li>
                        </ul>
                    </div>
                </div>
                <div class=" col-xl-3 col-lg-2 col-sm-6">
                    <div class="single-footer pb--40">
                        <div class="footer-title">
                            <h3>Extras</h3>
                        </div>
                        <ul class="footer-list normal-list">
                            <li><a href="~/cilent/#">Delivery</a></li>
                            <li><a href="~/cilent/#">About Us</a></li>
                            <li><a href="~/cilent/#">Stores</a></li>
                            <li><a href="~/cilent/#">Contact us</a></li>
                            <li><a href="~/cilent/#">Sitemap</a></li>
                        </ul>
                    </div>
                </div>
                <div class=" col-xl-3 col-lg-4 col-sm-6">
                    <div class="footer-title">
                        <h3>Newsletter Subscribe</h3>
                    </div>
                    <div class="newsletter-form mb--30">
                        <form action="https://demo.hasthemes.com/pustok-preview/pustok/php/mail.php">
                            <input type="email" class="form-control" placeholder="Enter Your Email Address Here...">
                            <button class="btn btn--primary w-100">Subscribe</button>
                        </form>
                    </div>
                    <div class="social-block">
                        <h3 class="title">STAY CONNECTED</h3>
                        <ul class="social-list list-inline">
                            <li class="single-social facebook">
                                <a href="~/cilent/#"><i class="ion ion-social-facebook"></i></a>
                            </li>
                            <li class="single-social twitter"><a href="~/cilent/#"><i class="ion ion-social-twitter"></i></a></li>
                            <li class="single-social google">
                                <a href="~/cilent/#">
                                    <i class="ion ion-social-googleplus-outline"></i>
                                </a>
                            </li>
                            <li class="single-social youtube"><a href="~/cilent/#"><i class="ion ion-social-youtube"></i></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="footer-bottom">
            <div class="container">
                <p class="copyright-heading">
                    Suspendisse in auctor augue. Cras fermentum est ac fermentum tempor. Etiam
                    vel
                    magna volutpat, posuere eros
                </p>
                <a href="~/cilent/#" class="payment-block">
                    <img src="~/cilent/image/icon/payment.png" alt="">
                </a>
                <p class="copyright-text">
                    Copyright © 2019 <a href="~/cilent/#" class="author">Pustok</a>. All Right Reserved.
                    <br>
                    Design By Pustok
                </p>
            </div>
        </div>
    </footer>
    <!-- Use Minified Plugins Version For Fast Page Load -->
    <script src="~/cilent/js/plugins.js"></script>
    <script src="~/cilent/js/ajax-mail.js"></script>
    <script src="~/cilent/js/custom.js"></script>
    @await RenderSectionAsync("Script", false)



    <!--  FILTER :  CATEGORY + TAG + PRICE -->

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var filterContainer = document.querySelector(".Filers");
            var productList = document.querySelector(".product-list");

            filterContainer.addEventListener("click", function (e) {
                if (e.target.classList.contains("category-item")) {
                    var id = e.target.dataset.id;
                    console.log("click on category:", id);

                    var formData = new FormData();
                    formData.append('categoryId', id);

                    fetch('/Product/Filter', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.text())
                        .then(x => {
                            filterContainer.innerHTML = x;
                        })
                        .catch(error => {
                            console.error("Error fetching products:", error);
                        });

                    fetch('/Product/ProductCategoryFilter', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.text())
                        .then(x => {
                            productList.innerHTML = x;
                        })
                        .catch(error => {
                            console.error("Error fetching products:", error);
                        });
                } else if (e.target.classList.contains("tag-item")) {
                    var id = e.target.dataset.id;
                    var categoryId = document.getElementById('SelectedCategory').value
                    console.log("click on tag:", id);

                    var formData = new FormData();
                    formData.append('tagId', id);
                    formData.append('categoryId', categoryId);

                    fetch('/Product/Filter', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.text())
                        .then(x => {
                            filterContainer.innerHTML = x;
                        })
                        .catch(error => {
                            console.error("Error fetching products:", error);
                        });

                    fetch('/Product/ProductCategoryFilter', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.text())
                        .then(x => {
                            productList.innerHTML = x;
                        })
                        .catch(error => {
                            console.error("Error fetching products:", error);
                        });
                } else if (e.target.classList.contains("btn-submit")) {
                    var submitButton = document.querySelector('.btn-submit');
                    console.log('btn-submit')
                    submitButton.addEventListener('click', (e) => {
                        e.preventDefault();
                        console.log('click')

                        var minPrice = document.getElementById('minPrice').value;
                        var maxPrice = document.getElementById('maxPrice').value;

                        console.log(minPrice);

                        var tagId = document.getElementById('SelectedTag').value
                        var categoryId = document.getElementById('SelectedCategory').value
                        console.log("click on tag:", tagId);

                        var formData = new FormData();
                        formData.append('minPrice', minPrice);
                        formData.append('maxPrice', maxPrice);
                        formData.append('tagId', tagId);
                        formData.append('categoryId', categoryId);

                        fetch('/Product/Filter', {
                            method: 'POST',
                            body: formData
                        })
                            .then(response => response.text())
                            .then(x => {
                                filterContainer.innerHTML = x;
                            })
                            .catch(error => {
                                console.error("Error fetching products:", error);
                            });

                        fetch('/Product/ProductCategoryFilter', {
                            method: 'POST',
                            body: formData
                        })
                            .then(response => response.text())
                            .then(x => {
                                productList.innerHTML = x;
                            })
                            .catch(error => {
                                console.error("Error fetching products:", error);
                            });
                    });
                } else if (e.target.classList.contains("btn-clear")) {
                    var submitButton = document.querySelector('.btn-clear');
                    console.log('btn-clear')
                    submitButton.addEventListener('click', (e) => {
                        e.preventDefault();
                        console.log('click')

                        var formData = new FormData();
                        formData.append('minPrice', null);
                        formData.append('maxPrice', null);
                        formData.append('tagId', null);
                        formData.append('categoryId', null);

                        fetch('/Product/Filter', {
                            method: 'POST',
                            body: formData
                        })
                            .then(response => response.text())
                            .then(x => {
                                filterContainer.innerHTML = x;
                            })
                            .catch(error => {
                                console.error("Error fetching products:", error);
                            });

                        fetch('/Product/ProductCategoryFilter', {
                            method: 'POST',
                            body: formData
                        })
                            .then(response => response.text())
                            .then(x => {
                                productList.innerHTML = x;
                            })
                            .catch(error => {
                                console.error("Error fetching products:", error);
                            });
                    });
                }
            });
        });
    </script>
    <!--  FILTER :  CATEGORY + TAG + PRICE   -->
   
    
   
    
    <!--  SEARCH -->
    
    
    <script>
        const inputElement = document.getElementById('search-product');

        inputElement.addEventListener('input', function (event) {
            const text = event.target.value;
            console.log(text);

            fetch(`/Home/Search?text=${text}`)
                .then(res => res.text())
                .then(res => {
                    console.log(res);
                    let search = document.getElementById('SearchList');
                    if (res.trim() === '') { 
                        search.style.display = "none";
                    } else {
                        search.style.display = "block";
                        search.innerHTML = res;
                    }
                })
                .catch(e => console.error(e));
        });
    </script>

    
    <!--  SEARCH -->
    



    
    <!--  PRODUCT lIST + PAGENATION  -->


    <script>


        let numBtnListeners = [];
        let prevBtnListener;
        let nextBtnListener;

        document.addEventListener('DOMContentLoaded', () => {
            addEventListeners();
            console.log()
        });

        function addEventListeners() {
            addNumBtnListeners();
            addPrevBtnListener();
            addNextBtnListener();
            basketEventListeners();
            wishEventListener();
        }

        function addNumBtnListeners() {
            numBtnListeners.forEach(listener => {
                listener.element.removeEventListener('click', listener.handler);
            });

            numBtnListeners = [];

            let numBtns = document.querySelectorAll('.prod-lists .num-btn');
            numBtns.forEach(btn => {
                let handler = e => {
                    e.preventDefault();
                    console.log('asd');
                    let id = btn.dataset.id;
                    console.log(id);
                    fetch(`/Product/Pagenate?page=${id}`)
                        .then(res => res.text())
                        .then(res => {
                            console.log(res);
                            document.querySelector('.prod-lists').innerHTML = res;
                            addEventListeners();
                        })
                        .catch(e => console.error(e));
                };
                btn.addEventListener('click', handler);
                numBtnListeners.push({ element: btn, handler: handler });
            });
        }

        function addPrevBtnListener() {
            if (prevBtnListener) {
                prevBtnListener.element.removeEventListener('click', prevBtnListener.handler);
            }

            let prevBtn = document.querySelector('.prod-lists .prev-btn');
            if (prevBtn) {
                let handler = e => {
                    e.preventDefault();
                    console.log('asd');
                    let id = prevBtn.dataset.id;
                    console.log(id);
                    fetch(`/Product/Pagenate?page=${id}`)
                        .then(res => res.text())
                        .then(res => {
                            console.log(res);
                            document.querySelector('.prod-lists').innerHTML = res;
                            addEventListeners();
                        })
                        .catch(e => console.error(e));
                };
                prevBtn.addEventListener('click', handler);
                prevBtnListener = { element: prevBtn, handler: handler };
            }
        }

        function addNextBtnListener() {
            if (nextBtnListener) {
                nextBtnListener.element.removeEventListener('click', nextBtnListener.handler);
            }

            let nextBtn = document.querySelector('.prod-lists .next-btn');
            if (nextBtn) {
                let handler = e => {
                    e.preventDefault();
                    console.log('asd');
                    let id = nextBtn.dataset.id;
                    console.log(id);
                    fetch(`/Product/Pagenate?page=${id}`)
                        .then(res => res.text())
                        .then(res => {
                            console.log(res);
                            document.querySelector('.prod-lists').innerHTML = res;
                            addEventListeners();
                        })
                        .catch(e => console.error(e));
                };
                nextBtn.addEventListener('click', handler);
                nextBtnListener = { element: nextBtn, handler: handler };
            }
        }

        function basketEventListeners() {
            document.querySelectorAll('.baskets').forEach(button => {
                button.addEventListener('click', handleBasketClick);
            });
        }

        function handleBasketClick(e) {
            e.preventDefault();
            console.log('Basket element clicked:', e.target);

            var id = e.target.dataset.id;

            fetch('Product/AddBasket/' + id)
                .then(res => {
                    if (res.ok) {
                        let count = document.querySelector('.text-number').innerText;
                        document.querySelector('.text-number').innerText = ++count;
                        toastr["success"]("Product added to cart");
                    } else {
                        toastr["warning"]("An error occurred while adding the product to the cart...");
                    }
                })
                .catch(err => console.error(err));
        }

        function wishEventListener() {
            document.querySelectorAll('.wishs').forEach(button => {
                button.addEventListener('click', handleWishClick);
            });
        }

        function handleWishClick(e) {
            e.preventDefault();
            console.log('Wish element clicked:', e.target);

            var id = e.target.dataset.id;

            fetch('Product/AddWish/' + id)
                .then(res => {
                    if (res.ok) {
                        toastr["success"]("Product added to WishList");
                    } else {
                        toastr["warning"]("An error occurred while adding the product to the WishList...");
                    }
                })
                .catch(err => console.error(err));
        }
    </script>

    <!--   PRODUCT lIST + PAGENATION  -->















    <script>
        function reattachEventListeners() {
            document.querySelectorAll('.basket').forEach(button => {
                button.addEventListener('click', (e) => {
                    e.preventDefault();
                    console.log('Basket element clicked:', e.target);


                    var id = e.target.dataset.id;


                    fetch('Product/AddBasket/' + id)
                        .then(res => {
                            if (res.ok) {
                                let count = document.querySelector('.text-number').innerText;
                                document.querySelector('.text-number').innerText = ++count;
                                toastr["success"]("Product added to cart");
                            } else {
                                toastr["warning"]("An error occurred while adding the product to the cart...");
                            }
                        })
                        .catch(err => console.error(err));
                });
            });

        }

        reattachEventListeners();


        function reattachEventListener() {
            document.querySelectorAll('.wish').forEach(button => {
                button.addEventListener('click', (e) => {
                    e.preventDefault();
                    console.log('Basket element clicked:', e.target);


                    var id = e.target.dataset.id;


                    fetch('Product/AddWish/' + id)
                        .then(res => {
                            if (res.ok) {
                                toastr["success"]("Product added to WishList");
                            } else {
                                toastr["warning"]("An error occurred while adding the product to the WishList...");
                            }
                        })
                        .catch(err => console.error(err));
                });
            });
        }
        reattachEventListener();

    </script>


    <script>
        document.addEventListener('click', async (event) => {
            const target = event.target.closest('.del-basket');
            if (target) {
                event.preventDefault();

                try {
                    console.log('dlt');
                    const productId = target.dataset.id;
                    console.log(productId);

                    let btnCount = target.dataset.count;

                    const formData = new FormData();
                    formData.append('id', productId);

                    const deleteResponse = await fetch('/Product/BasketDelete', {
                        method: 'POST',
                        body: formData
                    });

                    console.log(btnCount)
                    let count = document.querySelector('.text-number').innerText;
                    document.querySelector('.text-number').innerText = count - btnCount

                    if (!deleteResponse.ok) {
                        throw new Error(`HTTP error! status: ${deleteResponse.status}`);
                    }

                    const basketResponse = await fetch('/Product/GetBasket');
                    if (!basketResponse.ok) {
                        throw new Error(`HTTP error! status: ${basketResponse.status}`);
                    }

                    const updatedBasketData = await basketResponse.text();
                    document.getElementById('miniCart').innerHTML = updatedBasketData;
                } catch (error) {
                    console.error('Error deleting product:', error);
                }
            }
        });



        let basket = document.querySelector('.cart-block')
        basket.addEventListener('mouseenter', () => {
            console.log("cart-block")

            fetch('/Product/GetBasket')
                .then(res => res.text())
                .then(res => {
                    document.getElementById('miniCart').innerHTML = res;
                })
                .catch(e => console.log(e))

        })


    </script>


</body>


</html>